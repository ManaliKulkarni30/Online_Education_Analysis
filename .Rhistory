source('E:/aman/studentonlinestudy/onlineeducation.R')
read.csv(E:\aman\studentonlinestudy\aman12)
read.csv(E:/aman/studentonlinestudy/aman12)
read.csv("E:\aman\studentonlinestudy\aman12.csv")
#loading the dataset in R
read.csv("E:\aman\studentonlinestudy\aman12.csv")
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
#performing exploratory data analysis on the data set
#1. first step would be knowing about the datatypes
summary(aman12)
source('E:/aman/studentonlinestudy/onlineeducation.R')
library(skimr)
skim(aman12)
plot(aman12$V19, col="red")
plot(aman12$V21, col="red")
plot(aman12$V26, col="red")
plot(aman12$V27, col="red")
plot(aman12$V28, col="red")
plot(aman12$V29, col="red")
plot(aman12$V30, col="red")
plot(aman12$v31, col="red")
plot(aman12$V31, col="red")
#histogram plots of the same
hist(aman12$V19)
hist(as.numeric(aman12$V19)
hist(as.numeric(aman12$V19)
hist(as.numeric(aman12$V19), col="green")
hist(as.numeric(aman12$v21), col="green")
hist(as.numeric(aman12$v21), col="green")
hist(as.numeric(aman12$v21),col="green")
hist(as.numeric(aman12$V26), col="green")
hist(as.numeric(aman12$v21),col="green")
hist(as.numeric(aman12$V27), col="green")
hist(as.numeic(aman12$V28), col="green")
hist(as.numeric(aman12$V28), col="green")
hist(as.numeric(aman12$V29), col="green")
hist(as.numeric(aman12$V30), col="green")
hist(as.numeric(aman12$V31), col="green")
hist(as.numeric(aman12$v21),col="green")
hist(as.numeric(aman12$V21), col="green")
boxplot(as.numeric(aman12$V19), as.numeric(aman12$V21), as.numeric(aman12$V26), as.numeric(aman12$V27), as.numeric(aman12$V28), as.numeric(aman12$V29), as.numeric(aman12$V30), as.numeric(aman12$V31)
boxplot(as.numeric(aman12$V19), as.numeric(aman12$V21), as.numeric(aman12$V26), as.numeric(aman12$V27), as.numeric(aman12$V28), as.numeric(aman12$V29), as.numeric(aman12$V30), as.numeric(aman12$V31)
boxplot(as.numeric(aman12$V19), as.numeric(aman12$V21), as.numeric(aman12$V26), as.numeric(aman12$V27), as.numeric(aman12$V28), as.numeric(aman12$V29), as.numeric(aman12$V30), as.numeric(aman12$V31))
plot(aman12$V28, aman12$V29)
boxplot(as.numeric(aman12$V19), as.numeric(aman12$V21), as.numeric(aman12$V26), as.numeric(aman12$V27), as.numeric(aman12$V28), as.numeric(aman12$V29), as.numeric(aman12$V30), as.numeric(aman12$V31))
plot(aman12$v27, aman12$V30)
plot(aman12$V27, aman12$V30)
plot(aman12$V21, aman12$V27)
library(tidyr)
nba <- data.frame(player = c("James", "Durant", "Curry", "Harden", "Paul", "Wade"), team = c("CLEOH", "GSWOAK", "GSWOAK", "HOUTX", "HOUTX", "CLEOH"), day1points = c("25","23","30","41","26","20"), day2points = c("24","25","33","45","26","23"))
print(nba)
nba %>%
gather(day, points, c(day1points, day2points))
nba %>%
gather(day, points, c(day1points, day2points))%>%
spread(day, points)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 3)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 3) %>%
unite(teamstate, Team, State)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 3)%>%
ggplot(aes(x = day, y = points)) +
geom_point()+
facet_wrap(~ Team) +
geom_smooth(method = "lm",aes(group = 1), se = F)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 3)%>%
plot(aes(x = day, y = points)) +
geom_point()+
facet_wrap(~ Team) +
geom_smooth(method = "lm",aes(group = 1), se = F)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 3)%>%
plot(nba(x = day, y = points)) +
geom_point()+
facet_wrap(~ Team) +
geom_smooth(method = "lm",aes(group = 1), se = F)
install.packages("ggplot2")
library(ggplot2)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 2)%>%
ggplot(aes(x = day, y = points)) +
geom_point()+
facet_wrap(~ Team) +
geom_smooth(method = "lm",aes(group = 1), se = F)
nba %>%
gather(day, points, c(day1points, day2points))%>%
spread(day, points)
nba %>%
gather(day, points, c(day1points, day2points)) %>%
separate(col = team, into = c("Team", "State"), sep = 2)
str(aman12$V31
str(aman12$V31)
summary(aman12$V31)
source('E:/lab assignment R/1132200061_AmanKumarjha 21jan.R')
plot(aman12$V19, col="red")
hist(as.numeric(aman12$V21), col="green")
hist(as.numeric(aman12$V26), col="green")
hist(as.numeric(aman12$V27), col="green")
plot(aman12$V21, aman12$V27)
plot(aman12$V28, aman12$V29)
plot(aman12$V27, aman12$V30)
aman12$V8
aman12$V31
aman12$V27[is.na(aman12$V27)] = 5
aman12$V27
hist(as.numeric(aman12$V27), col="green")
aman12$V27[is.na(aman12$V27)] = 0
aman12$V27
plot(aman12$V29, col="red")
plot(aman12$V28, aman12$V29)
rel <- lm(aman12$V28~aman12$V29)
print(summary(rel))
rel<-lm(aman12$V28~aman12$V29)
print(summary(rel))
rel<-lm(aman12$V28~aman12$V29)
rel<-lm(as.numeric(aman12$V28)~as.numeric(aman12$V29))
print(summary(rel))
abline(lm(as.numeric(aman12$V28)~as.numeric(aman12$V29)))
View(aman12)
table(aman12$V20)
table(aman12$V22)
table(aman12$V23)
View(aman12)
table(aman12$V22)
table(aman12$V23)
table(aman12$V24)
rel2<-lm(as.numeric(aman12$V21)~as.numeric(aman12$V27))
print(summary(rel2))
abline(lm(as.numeric(aman12$V21)~as.numeric(aman12$V27)))
plot(aman12$V21, aman12$V27)
abline(lm(as.numeric(aman12$V21)~as.numeric(aman12$V27)))
table(aman12$V15)
table(aman12$V12)
table(aman12$V18)
tabulate(aman12$V17)
tabulate(aman12$V17)
tabulate(as.numeric(aman12$V17))
tabulate(as.numeric(aman12$V17))
tabulate(as.numeric(aman12$V19)
Mm
table(aman12$V17
plot(aman12$V19, col="red")
plot(aman12$V19, col="red")
summary(aman12)
table(aman12$V17
table(aman12$V17
table(aman12$V17)
table(aman12$V18)
# time spend in online session(aman12$V21) and #answering question in online session(aman12$V27)
rel2<-lm(as.numeric(aman12$V21)~as.numeric(aman12$V27))
print(summary(rel2))
plot(aman12$V21, aman12$V27)
abline(lm(as.numeric(aman12$V21)~as.numeric(aman12$V27)))
#answering question in online session(aman12$V27) and understanding in online session(aman12$V30)
rel1<-lm(as.numeric(aman12$V27)~as.numeric(aman12$V30))
print(summary(rel1))
plot(aman12$V27, aman12$V30)
abline(lm(as.numeric(aman12$V27)~as.numeric(aman12$V30)))
#doing assignment on time(aman12$V28) and submittion of assignment on time(aman12$V29)
rel<-lm(as.numeric(aman12$V28)~as.numeric(aman12$V29))
print(summary(rel))
plot(aman12$V28, aman12$V29)
abline(lm(as.numeric(aman12$V27)~as.numeric(aman12$V30)))
a<- data.frame(X = 310)
predict(rel, a)
b<- data.frame(X = 310)
predict(rel1, b)
rel2<-lm(as.numeric(aman12$V21)~as.numeric(aman12$V27))
print(summary(rel2))
d<- data.frame(X = 310)
predict(rel2, d)
plot(aman12$V21, aman12$V27)
abline(lm(as.numeric(aman12$V21)~as.numeric(aman12$V27)))
table(aman12$V20)
summary(aman12)
plot(aman12)
install.packages(sname_UI <- function(id) {
ns <- NS(id)
tagList(
)
}
name <- function(input, output, session) {
}
install.packages('shiny')
library(shiny)
runExample("01_hello")
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V4, aman12$V17), aman12$V17)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V4, aman12$V18), aman12$V18)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V4, aman12$V12), aman12$V12)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V4, aman12$V20), aman12$V20)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V4, aman12$V20), aman12$V20)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V22, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V22, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V23, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V24, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V25, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V19, aman12$V20), aman12$V20)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V28, aman12$V29), aman12$V29)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V19, aman12$V4), aman12$V4)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V27, aman12$V30), aman12$V30)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V24, aman12$V25), aman12$V25)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V22, aman12$V13), aman12$V13)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V19, aman12$V20), aman12$V20)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V16, aman12$V4), aman12$V4)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V27, aman12$V30), aman12$V30)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
View(aman12)
library(ggplot2)
ggplot(aman12, aes(reorder(aman12$V16, aman12$V4), aman12$V4)) +
geom_point() +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1))
table(aman12$V15)
table(aman12$V4)
table(aman12$V12)
table(aman12$V13)
table(aman12$V13)
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"My first app",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"My first app",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
install.packages("shinythemes")
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"My first app",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
source('E:/aman/studentonlinestudy/onlineeducationshiny.R')
table(aman12$V4)
library(shiny); runApp('onlineeducationshiny.R')
runApp('onlineeducationshiny.R')
library(shiny)
library(dplyr)
library(ggplot2)
server <- function(input, output, session) {
aman12 <- read.csv("E:/aman/studentonlinestudy/aman12.csv", header=FALSE)
#Summarize Data and then Plot
data <- reactive({
req(input$aman12$v4)
df <- aman12 %>% filter(aman12$V13 %in% input$aman12$V4) %>%  group_by(aman12$V13) %>% summarise(aman12 = sum(aman12))})
#Plot
output$plot <- renderPlot({
g <- ggplot(data(), aes( y = aman12$V4, x = aman12$V13))
g + geom_bar(stat = "sum")
})
}
ui <- basicPage(
h1("R Shiny interactive Bar Chart using Reactive and Render"),
selectInput(inputId = "aman12$v4",
label = "Choose region",
list("Maharastra","West Bengal"," Bihar","   Uttar Pradesh ")),
plotOutput("plot")
)
shinyApp(ui = ui, server = server)
runApp('onlineeducationshiny.R')
runApp('onlineeducationshiny.R')
runApp('onlineeducationshiny.R')
library(rpart)
library(rpart.plot)
tree <- rpart(phi.eye ~ phi.joint + phi.obesity, aman13)
a<- data.frame(phi.joint = c("yes"), phi.obesity = c("yes"))
result <- predict(tree, a)
print(result)
rpart.plot(tree)
aman13 <- read.csv("E:/aman/studentonlinestudy/aman13.csv")
View(aman13)
library(rpart)
library(rpart.plot)
tree <- rpart(phi.eye ~ phi.joint + phi.obesity, aman13)
a<- data.frame(phi.joint = c("yes"), phi.obesity = c("yes"))
result <- predict(tree, a)
print(result)
rpart.plot(tree)
